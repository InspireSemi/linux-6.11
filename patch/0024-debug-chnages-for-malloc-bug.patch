From c3dea03e3a03bcf6d7aa0f8e0be19bdfe51e8b28 Mon Sep 17 00:00:00 2001
From: Marc Karasek <mkarasek@inspiresemi.com>
Date: Mon, 7 Oct 2024 10:01:02 -0500
Subject: [PATCH 24/24] debug chnages for malloc() bug

---
 arch/riscv/boot/dts/inspiresemi/inspire_core.dts | 6 +++---
 arch/riscv/kernel/setup.c                        | 6 ++++++
 arch/riscv/mm/context.c                          | 2 +-
 arch/riscv/mm/init.c                             | 2 +-
 kernel/dma/pool.c                                | 6 ++++++
 mm/memblock.c                                    | 2 +-
 riscvtoolspath.sh                                | 3 +++
 7 files changed, 21 insertions(+), 6 deletions(-)
 create mode 100755 riscvtoolspath.sh

diff --git a/arch/riscv/boot/dts/inspiresemi/inspire_core.dts b/arch/riscv/boot/dts/inspiresemi/inspire_core.dts
index 52cdc307848e..da426360ebdf 100644
--- a/arch/riscv/boot/dts/inspiresemi/inspire_core.dts
+++ b/arch/riscv/boot/dts/inspiresemi/inspire_core.dts
@@ -12,9 +12,9 @@ pmu {
 	};
 
  	chosen {
-		bootargs = "debug console=uart,mmio,0x70010100 earlycon=uart,mmio,0x70010100 rodata=off no5lvl";
-		linux,initrd-start = <0x1100 0x04000000>;
-		linux,initrd-end = <0x1100 0x042A7DC9>;
+		bootargs = "debug console=uart,mmio,0x70010100 earlycon=uart,mmio,0x70010100 rodata=on no5lvl";
+		linux,initrd-start = <0x1100 0x06000000>;
+		linux,initrd-end = <0x1100 0x062A7DC9>;
 		rng-seed = <0x4fe9397d 0xb7883060 0xe56ff3c2 0xb05b4e3 0x62e5479c 0xd932a9c8 0x95a47b5b 0x192ef245>;
         };
 
diff --git a/arch/riscv/kernel/setup.c b/arch/riscv/kernel/setup.c
index 69afb00dfc2a..d4934f07ab3a 100644
--- a/arch/riscv/kernel/setup.c
+++ b/arch/riscv/kernel/setup.c
@@ -249,6 +249,12 @@ extern void __init init_rt_signal_env(void);
 void __init setup_arch(char **cmdline_p)
 {
 	parse_dtb();
+
+	// Print stvec here
+	unsigned long vector; 
+	vector = csr_read(CSR_STVEC);
+	pr_info("STVEC: %lx\n", vector);
+
 	setup_initial_init_mm(_stext, _etext, _edata, _end);
 
 	*cmdline_p = boot_command_line;
diff --git a/arch/riscv/mm/context.c b/arch/riscv/mm/context.c
index fd47a4c7893f..0f85edc1cb63 100644
--- a/arch/riscv/mm/context.c
+++ b/arch/riscv/mm/context.c
@@ -235,7 +235,7 @@ static int __init asids_init(void)
 	asid_bits = (csr_read(CSR_SATP) >> SATP_ASID_SHIFT)  & SATP_ASID_MASK;
 	asid_bits = fls_long(asid_bits);
 	csr_write(CSR_SATP, old);
-	asid_bits = 0;
+	//asid_bits = 0;
 
 	/*
 	 * In the process of determining number of ASID bits (above)
diff --git a/arch/riscv/mm/init.c b/arch/riscv/mm/init.c
index 1785782c2e55..4c3053c33dd6 100644
--- a/arch/riscv/mm/init.c
+++ b/arch/riscv/mm/init.c
@@ -181,7 +181,7 @@ void __init mem_init(void)
 		swiotlb = true;
 	}
 
-	swiotlb_init(swiotlb, SWIOTLB_VERBOSE);
+	swiotlb_init(swiotlb, SWIOTLB_VERBOSE | SWIOTLB_ANY);
 	memblock_free_all();
 
 	print_vm_layout();
diff --git a/kernel/dma/pool.c b/kernel/dma/pool.c
index d10613eb0f63..b581940b29b7 100644
--- a/kernel/dma/pool.c
+++ b/kernel/dma/pool.c
@@ -90,10 +90,16 @@ static int atomic_pool_expand(struct gen_pool *pool, size_t pool_size,
 	do {
 		pool_size = 1 << (PAGE_SHIFT + order);
 		if (cma_in_zone(gfp))
+		{
+			pr_info("MCK**** dma_alloc_from_contiguous\n");
 			page = dma_alloc_from_contiguous(NULL, 1 << order,
 							 order, false);
+		}
 		if (!page)
+		{
+			pr_info("MCK**** alloc_pages %x : %x \n", gfp, order);
 			page = alloc_pages(gfp, order);
+		}
 	} while (!page && order-- > 0);
 	if (!page)
 		goto out;
diff --git a/mm/memblock.c b/mm/memblock.c
index 3b9dc2d89b8a..edf893a8801b 100644
--- a/mm/memblock.c
+++ b/mm/memblock.c
@@ -1680,7 +1680,7 @@ void * __init memblock_alloc_try_nid(
 {
 	void *ptr;
 
-	memblock_dbg("%s: %llu bytes align=0x%llx nid=%d from=%pa max_addr=%pa %pS\n",
+	pr_debug("%s: %llu bytes align=0x%llx nid=%d from=%pa max_addr=%pa %pS\n",
 		     __func__, (u64)size, (u64)align, nid, &min_addr,
 		     &max_addr, (void *)_RET_IP_);
 	ptr = memblock_alloc_internal(size, align,
diff --git a/riscvtoolspath.sh b/riscvtoolspath.sh
new file mode 100755
index 000000000000..6e89187599ce
--- /dev/null
+++ b/riscvtoolspath.sh
@@ -0,0 +1,3 @@
+export PATH="$PATH:/opt/riscv64_080924/bin:$PWD/bintools"
+export RISCV="/opt/riscv64_080924"
+
-- 
2.39.3

